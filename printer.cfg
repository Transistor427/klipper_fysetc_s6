# This file contains common pin mappings for the Fysetc S6 v2 board.  To use
# this config, the firmware should be compiled for the STM32F446 with a "64KiB
# bootloader".  When calling "menuconfig", enable "extra low-level configuration
# setup" and select the "12MHz crystal" as clock reference.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 16
endstop_pin: PB14  # PA1 for X-max
position_min: -1
position_endstop: 0
position_max: 300
homing_speed: 90
homing_retract_speed: 60
second_homing_speed: 30

[stepper_y]
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 16
endstop_pin: PB13  # PA2 for Y-max
position_min: -1
position_endstop: 0
position_max: 301
homing_speed: 90
homing_retract_speed: 60
second_homing_speed: 30

[stepper_z]
step_pin: PD14
dir_pin: PD13
enable_pin: !PD15
microsteps: 16
rotation_distance: 8
endstop_pin: PA3  # PA0 for Z-max (and servo) # probe:z_virtual_endstop 
position_min: -5
position_endstop: 352
position_max: 355
homing_speed: 30
homing_retract_speed: 5
second_homing_speed: 5
homing_retract_dist: 8

[stepper_z1]
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
microsteps: 16
rotation_distance: 8

[extruder]
step_pin: PD5
dir_pin: !PD6
enable_pin: !PD4
microsteps: 16
rotation_distance: 7.8
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB3
sensor_type: PT1000
sensor_pin: PC0
control: pid
pid_Kp: 22
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 260

[heater_bed]
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
control: pid
pid_Kp: 52.922
pid_Ki: 2.063
pid_Kd: 339.365
min_temp: 0
max_temp: 140
[probe]
pin: PA0
x_offset: 0.0
y_offset: 0.0
z_offset: -0.2
speed: 1
lift_speed: 25
samples: 1
sample_retract_dist: 2.0
samples_result: average
samples_tolerance: 0.04
samples_tolerance_retries: 0

[bed_mesh]
speed: 180
horizontal_move_z: 2
mesh_min:
    15,15
mesh_max:
    285,285
probe_count: 4,4

[output_pin POWER]
pin: PA1
pwm: False
value: 0

[gcode_macro M81]
gcode:
  SET_PIN PIN=POWER VALUE=1

[gcode_macro G29]
gcode:
  G28 Z
  G28 Y
  G28 X
  BED_MESH_CALIBRATE

[z_tilt]
z_positions:
    0,150
    300,150
points:
     10,150
     300,150
speed: 200
horizontal_move_z: 1
retries: 5
retry_tolerance: 0.005

[gcode_macro G38]
gcode:
  Z_TILT_ADJUST

#fan for printed model FAN0
[fan]
pin: PB0

[heater_fan front_fan]
pin: PB1
heater: extruder
heater_temp: 60.0
fan_speed: 1

[controller_fan drivers_fan]
pin: PB2
fan_speed: 1.0
heater: extruder
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

[multi_pin multi_rgb]
pins: R,G,B

[filament_switch_sensor z-bolt_fs]
pause_on_runout: True
runout_gcode: 
   G92 E0
   G1 E-5
   G1 X10 Y10
   SET_PIN PIN=R VALUE=1
   SET_PIN PIN=G VALUE=0
   SET_PIN PIN=B VALUE=0
   PAUSE
insert_gcode:
   SET_PIN PIN=R VALUE=0
   SET_PIN PIN=G VALUE=1
   SET_PIN PIN=B VALUE=0
   G92 E0
   G1 E+5
   RESUME VELOCITY=25
event_delay: 15.0
switch_pin: PA2 #Y+

[output_pin R]
pin: PB6
pwm: false
value: 0

[output_pin G]
pin: PB5
pwm: false
value: 0

[output_pin B]
pin: PB7
pwm: false
value: 0

[gcode_macro RL]
gcode:
 SET_PIN PIN=R VALUE=1
 SET_PIN PIN=G VALUE=0
 SET_PIN PIN=B VALUE=0

[gcode_macro GL]
gcode:
 SET_PIN PIN=R VALUE=0
 SET_PIN PIN=G VALUE=1
 SET_PIN PIN=B VALUE=0

[gcode_macro BL]
gcode:
 SET_PIN PIN=R VALUE=0
 SET_PIN PIN=G VALUE=0
 SET_PIN PIN=B VALUE=1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_12345-if00

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 2500
#max_accel_to_decel: 7000
max_z_velocity: 30
max_z_accel: 30
square_corner_velocity: 15

[input_shaper]
shaper_freq_x: 45
shaper_type_x: mzv
shaper_freq_y: 45
shaper_type_y: mzv

########################################
# TMC UART configuration
########################################

[tmc2208 stepper_x]
uart_pin: PE8
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 999999

[tmc2208 stepper_y]
uart_pin: PC4
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 999999

[tmc2208 stepper_z]
uart_pin: PD12
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 999999

[tmc2208 extruder]
uart_pin: PA15
run_current: 0.54
hold_current: 0.4
stealthchop_threshold: 999999

[tmc2208 stepper_z1]
uart_pin: PC5
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 999999

########################################
# EXP1 / EXP2 (display) pins
########################################

#[board_pins]
#aliases:
#    # EXP1 header
#    EXP1_1=PC9, EXP1_2=PA8,
#    EXP1_3=PC11, EXP1_4=PD2,
#    EXP1_5=PC10, EXP1_6=PC12,    # Slot in the socket on this side
#    EXP1_7=PD0, EXP1_8=PD1,
#    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
#    EXP2_1=PA6, EXP2_2=PA5,
 #   EXP2_3=PC6, EXP2_4=PA4,
 #   EXP2_5=PC7, EXP2_6=PA7,      # Slot in the socket on this side
 #   EXP2_7=PB10, EXP2_8=<RST>,
 #  EXP2_9=<GND>, EXP2_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME
  
[gcode_macro START_PRINT]
gcode:
  G21 ;metric values
  G90 ;absolute positioning
  M82 ;set extruder to absolute mode
  M107 ;start with the fan off
  G28 X0 Y0 Z0;move X/Y to min endstops
  G29;auto bed level
  G1 Z3 F6000 ;move the platform down 15mm
  G92 E0 ;zero the extruded length
  ;intro line
  G1 X0 Y0 F5000
  G1 Z0.2 F2000
  G1 X50 E16 F1500
  G1 X100 E20 F1000
  G92 E0

[gcode_macro END_PRINT]
gcode:
  M104 S0 ;extruder heater off
  M140 S0 ;heated bed heater off
  G91 ;relative positioning
  G1 E-10 F300 ;retract the filament
  G1 Z+0.5 E-10 X-20 Y-20 F9000 ;move Z up a bit and retract filament even more
  G28 X0 Y0 ;move X/Y to min endstops, so the head is out of the way
  M84 ;steppers off
  G90 ;absolute positioning
  M82 ;absolute extrusion mode
  M106 S255 ;on fan 100%
  M109 S60 ;set temp 60
  M81 ;power off
  
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  G92
  G1 Z5
  G28 X Y
  #TURN_OFF_HEATERS
  #CLEAR_PAUSE
  #SDCARD_RESET_FILE
  #BASE_CANCEL_PRINT
  RESTART

[mcu rpi]
serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    100,100,20  # an example

[gcode_macro PID_HOT]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=220

[gcode_macro PID_BED]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=70

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
